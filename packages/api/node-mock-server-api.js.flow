// @flow

import type { $MethodEnumType } from 'node-mock-server-utils';

// RESPONSE
export type ResponseConstructorType = {
	src: string,
	endpointId: string,
	methodId: $MethodEnumType,
	responseId: string,
};

// METHOD
export type StoreFileJsonType = {
	desc: string,
	desc2?: string,
	security?: Array<string>,
	protected: boolean,
	status?: string,
	request: Object,
	endpoint: string,
	method: $MethodEnumType,
	responses: ?Array<{
		statusCode?: string | number,
		schema?: {
			type?: string,
		},
	}>,
};

export type MethodConstructorType = {
	src: string,
	endpointId: string,
	methodId: $MethodEnumType,
};

// ENDPOINT
export type EndpointConstructorType = {
	endpointId: string,
	src: string,
};

export type CreateEndpointType = {
	endpoint: string,
	desc?: string,
	method?: string,
};

export type CreateMethodType = {
	method: string,
	desc?: string
};

// ENDPOINTS
export type EndpointsConstructorType = {
	src: string,
};

declare module 'node-mock-server-api' {

	declare export type $CreateEndpointType = CreateEndpointType;
	declare export type $CreateMethodType = CreateMethodType;


	declare export class Response {
		src: string;
		endpointId: string;
		methodId: $MethodEnumType;
		response: string;
		responseId: string;
		status: number;
		data: ?string;

		constructor(options: ResponseConstructorType): void;
		getData(): ?string;
		updateResponse(data: string): boolean;
	}

	declare export class Method {
		src: string;
		endpointId: string;
		methodId: $MethodEnumType;
		desc: string;
		desc2: string;
		responses: Array<Response>;
		responsesById: {[key: string]: Response};

		constructor(options: MethodConstructorType): void,
		getResponses(): Array<Response>,
		getResponse(responseId: string): Response,
		createResponse(responseId: string, data: string): boolean,
	}

	declare export class Endpoint {
		src: string,
		endpoint: string,
		endpointId: string,
		methods: Array<$MethodEnumType>,
		methodsById: {[key: $MethodEnumType]: Method},

		constructor(options: EndpointConstructorType): void,
		getMethods(): Array<Method>,
		getMethod(methodId: $MethodEnumType): Method,
		createMethod(options: $CreateMethodType): ?Method,
		removeMethod(methodId: $MethodEnumType): boolean,
	}

	declare export class Endpoints {
		src: string,
		endpoints: Array<Endpoint>,
		endpointsById: {[key: string]: Endpoint},

		constructor(options: EndpointsConstructorType): void,
		getEndpoints(): Array<Endpoint>,
		getEndpoint(endpointId: string): Endpoint,
		createEndpoint(data: $CreateEndpointType): Endpoint,
		removeEndpoint(endpointId: string): boolean,
	}

	declare export default Endpoints;
}
