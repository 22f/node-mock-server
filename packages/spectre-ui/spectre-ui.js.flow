// @flow



/**

	Button

**/
export type ButtonTypeType = "button" | "submit" | "reset";
export type ButtonModifierType = "primary" | "link" | "action" | "action circle";
export type ButtonSizeType = "sm" | "lg" | "block";
export type ButtonClassPropsType = {
	modifier?: ButtonModifierType,
	size?: ButtonSizeType,
	className?: string,
	loading?: boolean
};
export type ButtonDefaultPropsType = {
	disabled?: boolean,
	tabIndex?: number,
	type?: ButtonTypeType,
	label?: string,
	onClick?: Function
};
export type ButtonPropsType = ButtonClassPropsType & ButtonDefaultPropsType;
declare module "spectre-ui/Button" {
	declare export default function Button(ButtonPropsType): React$Element<*>;
}



/**

	Typography

**/
export type HeadingTypeEnumType = "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
export type HeadingClassPropsType = {
	type?: HeadingTypeEnumType,
	className?: string
};
export type HeadingDefaultPropsType = {
	children?: React$Node,
	tag?: string
};
export type HeadingPropsType = HeadingClassPropsType & HeadingDefaultPropsType;
export type BlockquotePropsType = {
	children?: React$Node,
	className?: string
};
export type ParagraphPropsType = {
	children?: React$Node,
	innerHtml?: string,
	lang?: string,
	className?: string
};
export type ListTypeEnumType = "ul" | "ol" | "dl";
export type ListEntryObjectType = {
	name: string,
	entries: Array<ListEntryType>
};
export type ListEntryType = string | ListEntryObjectType;
export type ListEntriesType = Array<ListEntryType>;
export type ListPropsType = {
	entries: ListEntriesType,
	type?: ListTypeEnumType,
	className?: string,
	classNameEntry?: string
};
declare module "spectre-ui/Typography" {
	declare export default function Heading(HeadingPropsType): React$Element<*>;
	declare export default function Paragraph(ParagraphPropsType): React$Element<*>;
	declare export default function Blockquote(BlockquotePropsType): React$Element<*>;
	declare export default class List extends React$Component<ListPropsType> {}
}

export type TableModifierEnumType = "striped" | "hover";
export type TableValueType = string | number;
export type TableArrayType = Array<Array<TableValueType>>;
export type TableClassPropsType = {
	modifiers?: Array<TableModifierEnumType>,
	className?: string,
};
export type TableDefaultPropsType = {
	head?: TableArrayType,
	body?: TableArrayType,
	classNameHead?: string,
	classNameHeadRow?: string,
	classNameHeadCell?: string,
	classNameBody?: string,
	classNameBodyRow?: string,
	classNameBodyCell?: string,
	activeRow?: number
};
export type TablePropsType = TableClassPropsType & TableDefaultPropsType;
declare module "spectre-ui/Table" {
	declare export default class Table extends React$Component<TablePropsType> {}
}



/**

	Forms/Input

**/
export type InputPropsType = {
	id?: string,
	className?: string,
	autoComplete?: string,
	autoFocus?: boolean,
	onKeyUp?: (event: SyntheticKeyboardEvent<>) => void,
	onKeyDown?: (event: SyntheticKeyboardEvent<>) => void,
	onBlur?: (event: SyntheticFocusEvent<>) => void,
	onChange?: (event: SyntheticInputEvent<>) => void,
	onFocus?: (event: SyntheticFocusEvent<>) => void,
	onDirty?: () => void,
	onClean?: () => void,
	inputRef?: (node: HTMLElement) => void,
	placeholder?: string,
	rows?: string | number,
	rowsMax?: string | number,
	type?: string,
	value?: string | number | Array<string | number>,
	name?: string,
	multiline?: boolean,
	disabled?: boolean,
	required?: boolean,
	readOnly?: boolean,
	defaultValue?: string | number,
	error?: boolean,
	inputProps?: Object
};
export type DirtyCheckObjType = HTMLInputElement | null | InputPropsType;
export type InputStateType = {
	focused: boolean
};
export type LabelPropsType = {
	children: React$Node,
	className?: string,
	htmlFor?: string
};
export type GroupPropsType = {
	children: React$Node,
	className?: string
};
export type TextFieldDefaultPropsType = {
	id: string,
	label?: string,
	classNameLabel?: string,
	classNameInput?: string
};
export type TextFieldPropsType = InputPropsType & TextFieldDefaultPropsType;
declare module "spectre-ui/Forms" {
	declare export default class Input extends React$Component<InputPropsType, InputStateType> {}
	declare export default function Label(LabelPropsType): React$Element<*>;
	declare export default function Group(GroupPropsType): React$Element<*>;
}
